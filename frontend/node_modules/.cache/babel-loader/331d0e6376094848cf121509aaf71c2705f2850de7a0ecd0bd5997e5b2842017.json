{"ast":null,"code":"export default {\n  name: 'ProfilePage',\n  data() {\n    return {\n      user: {\n        id: '',\n        // ID de l'utilisateur\n        email: '',\n        nom: '',\n        age: null\n      }\n    };\n  },\n  methods: {\n    async updateProfile() {\n      try {\n        const response = await fetch(`/api/utilisateurs/${this.user.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.user)\n        });\n        if (response.ok) {\n          alert('Profil mis à jour avec succès');\n        } else {\n          alert('Erreur lors de la mise à jour du profil');\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n      }\n    }\n  },\n  created() {\n    // Cette fonction est appelée lorsque le composant est créé\n    // Vous pouvez récupérer les informations de l'utilisateur ici, par exemple à partir d'un service ou d'un store Vuex\n    this.user = {\n      id: '1',\n      // Remplacer par la méthode de récupération de l'ID utilisateur\n      email: 'default email',\n      nom: 'default nom',\n      age: 25\n    };\n  }\n};","map":{"version":3,"names":["name","data","user","id","email","nom","age","methods","updateProfile","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","created"],"sources":["E:\\CESI\\A4\\Projet DEV\\Projet\\APP\\KittyDelivery_Delivery\\frontend\\src\\components\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <header>\r\n    <img class=\"title\" src=\"../assets/title.png\" alt=\"Kitty Delivery title\" />\r\n    <router-link to=\"/delivery\">\r\n        <button class=\"back\"> Retour </button>\r\n    </router-link>\r\n  </header>\r\n  <div class=\"container_profile\">\r\n    <form class=\"form\" @submit.prevent=\"updateProfile\">\r\n        <h1>Votre profil Kitty</h1>\r\n        <label class=\"text\">\r\n          <input v-model=\"user.id\" disabled class=\"text\" type=\"text\" placeholder=\"ID\" />\r\n        </label>\r\n        <label class=\"text\">\r\n          <input v-model=\"user.email\" class=\"text\" type=\"text\" placeholder=\"Adresse email\" />\r\n        </label>\r\n        <label class=\"text\">\r\n          <input v-model=\"user.nom\" class=\"text\" type=\"text\" placeholder=\"Nom\" />\r\n        </label>\r\n        <label class=\"text\">\r\n          <input v-model=\"user.age\" class=\"text\" type=\"number\" placeholder=\"Âge\" />\r\n        </label>\r\n        <div class=\"button-container\">\r\n          <button class=\"button-update\" type=\"submit\">\r\n            <i class=\"icon ion-md-lock\"></i> Mettre à jour\r\n          </button>\r\n          <button class=\"button-deco\" type=\"button\">\r\n            <i class=\"icon ion-md-lock\"></i> Deconnexion\r\n          </button>\r\n          <button class=\"button-delete\" type=\"button\">\r\n            <i class=\"icon ion-md-lock\"></i> Supprimer mon compte\r\n          </button>\r\n        </div>\r\n      </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProfilePage',\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', // ID de l'utilisateur\r\n        email: '',\r\n        nom: '',\r\n        age: null,\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async updateProfile() {\r\n      try {\r\n        const response = await fetch(`/api/utilisateurs/${this.user.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(this.user)\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert('Profil mis à jour avec succès');\r\n        } else {\r\n          alert('Erreur lors de la mise à jour du profil');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur:', error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Cette fonction est appelée lorsque le composant est créé\r\n    // Vous pouvez récupérer les informations de l'utilisateur ici, par exemple à partir d'un service ou d'un store Vuex\r\n    this.user = {\r\n      id: '1', // Remplacer par la méthode de récupération de l'ID utilisateur\r\n      email: 'default email',\r\n      nom: 'default nom',\r\n      age: 25\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../stylesheets/styles.css\" scoped></style>\r\n"],"mappings":"AAsCA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,qBAAqB,IAAI,CAACR,IAAI,CAACC,EAAE,EAAE,EAAE;UAChEQ,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,IAAI;QAChC,CAAC,CAAC;QAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,+BAA+B,CAAC;QACxC,OAAO;UACLA,KAAK,CAAC,yCAAyC,CAAC;QAClD;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR;IACA;IACA,IAAI,CAAClB,IAAG,GAAI;MACVC,EAAE,EAAE,GAAG;MAAE;MACTC,KAAK,EAAE,eAAe;MACtBC,GAAG,EAAE,aAAa;MAClBC,GAAG,EAAE;IACP,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}