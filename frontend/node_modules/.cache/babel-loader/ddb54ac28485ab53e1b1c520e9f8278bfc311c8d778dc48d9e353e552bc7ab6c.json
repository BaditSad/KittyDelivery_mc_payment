{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: {\n        id: '',\n        // Assuming you will fetch and set the user id\n        user_name: '',\n        email: '',\n        age: '' // Add additional fields as required by your database schema\n      }\n    };\n  },\n  methods: {\n    updateUser() {\n      fetch(`/api/users/${this.user.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\n        },\n        body: JSON.stringify({\n          user_name: this.user.user_name,\n          email: this.user.email,\n          age: this.user.age // Add additional fields as required by your database schema\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        // Handle success (e.g., navigate to another page or display a success message)\n      }).catch(error => {\n        console.error('Error:', error);\n        // Handle error\n      });\n    }\n  },\n  created() {\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\n    fetch(`/api/users/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\n      }\n    }).then(response => response.json()).then(data => {\n      this.user = data;\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n};","map":{"version":3,"names":["data","user","id","user_name","email","age","methods","updateUser","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","response","json","console","log","catch","error","created","userId","$route","params"],"sources":["E:\\CESI\\A4\\Projet DEV\\Projet\\APP\\KittyDelivery_Delivery\\frontend\\src\\components\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h2>Edit User Information</h2>\r\n    <form @submit.prevent=\"updateUser\">\r\n      <div class=\"form-group\">\r\n        <label for=\"user_name\">Name:</label>\r\n        <input type=\"text\" v-model=\"user.user_name\" id=\"user_name\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" v-model=\"user.email\" id=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"age\">Age:</label>\r\n        <input type=\"number\" v-model=\"user.age\" id=\"age\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-button\">Update User</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', // Assuming you will fetch and set the user id\r\n        user_name: '',\r\n        email: '',\r\n        age: '' // Add additional fields as required by your database schema\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    updateUser() {\r\n      fetch(`/api/users/${this.user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\r\n        },\r\n        body: JSON.stringify({\r\n          user_name: this.user.user_name,\r\n          email: this.user.email,\r\n          age: this.user.age // Add additional fields as required by your database schema\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n          // Handle success (e.g., navigate to another page or display a success message)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n          // Handle error\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\r\n    fetch(`/api/users/${userId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.user = data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user data:', error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  width: 300px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.submit-button {\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"AAsBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QAAE;QACRC,SAAS,EAAE,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAC,CAAE;MACV;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXC,KAAK,CAAC,cAAc,IAAI,CAACP,IAAI,CAACC,EAAE,EAAE,EAAE;QAClCO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAE;QAC7D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBZ,SAAS,EAAE,IAAI,CAACF,IAAI,CAACE,SAAS;UAC9BC,KAAK,EAAE,IAAI,CAACH,IAAI,CAACG,KAAK;UACtBC,GAAG,EAAE,IAAI,CAACJ,IAAI,CAACI,GAAE,CAAE;QACrB,CAAC;MACH,CAAC,EACEW,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAChB,IAAG,IAAK;QACZmB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEpB,IAAI,CAAC;QAC7B;MACF,CAAC,EACAqB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B;MACF,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACxB,EAAE,EAAE;IACtCM,KAAK,CAAC,cAAcgB,MAAM,EAAE,EAAE;MAC5Bd,OAAO,EAAE;QACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAE;MAC7D;IACF,CAAC,EACEI,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAChB,IAAG,IAAK;MACZ,IAAI,CAACC,IAAG,GAAID,IAAI;IAClB,CAAC,EACAqB,KAAK,CAACC,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}