{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: {\n        id: '',\n        // Assuming you will fetch and set the user id\n        name: '',\n        email: '',\n        age: ''\n      }\n    };\n  },\n  methods: {\n    updateUser() {\n      // Make API call to update user information\n      fetch(`/api/utilisateurs/${this.user.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.user)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n        // Handle success (e.g., navigate to another page or display a success message)\n      }).catch(error => {\n        console.error('Error:', error);\n        // Handle error\n      });\n    }\n  },\n  created() {\n    // Fetch user data and populate the form\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\n    fetch(`/api/utilisateurs/${userId}`).then(response => response.json()).then(data => {\n      this.user = data;\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n};","map":{"version":3,"names":["data","user","id","name","email","age","methods","updateUser","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","created","userId","$route","params"],"sources":["E:\\CESI\\A4\\Projet DEV\\Projet\\APP\\KittyDelivery_Delivery\\frontend\\src\\components\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Edit User Information</h2>\r\n    <form @submit.prevent=\"updateUser\">\r\n      <div>\r\n        <label for=\"name\">Name:</label>\r\n        <input type=\"text\" v-model=\"user.name\" id=\"name\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" v-model=\"user.email\" id=\"email\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"age\">Age:</label>\r\n        <input type=\"number\" v-model=\"user.age\" id=\"age\" required />\r\n      </div>\r\n      <button type=\"submit\">Update User</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', // Assuming you will fetch and set the user id\r\n        name: '',\r\n        email: '',\r\n        age: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    updateUser() {\r\n      // Make API call to update user information\r\n      fetch(`/api/utilisateurs/${this.user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.user)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n          // Handle success (e.g., navigate to another page or display a success message)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n          // Handle error\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    // Fetch user data and populate the form\r\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\r\n    fetch(`/api/utilisateurs/${userId}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.user = data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user data:', error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"../stylesheets/styles.css\" scoped></style>\r\n"],"mappings":"AAsBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QAAE;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE;MACP;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACAC,KAAK,CAAC,qBAAqB,IAAI,CAACP,IAAI,CAACC,EAAE,EAAE,EAAE;QACzCO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,IAAI;MAChC,CAAC,EACEa,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACd,IAAG,IAAK;QACZiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAElB,IAAI,CAAC;QAC7B;MACF,CAAC,EACAmB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B;MACF,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACtB,EAAE,EAAE;IACtCM,KAAK,CAAC,qBAAqBc,MAAM,EAAE,EAChCR,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACd,IAAG,IAAK;MACZ,IAAI,CAACC,IAAG,GAAID,IAAI;IAClB,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}