{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: {\n        id: '',\n        // Assuming you will fetch and set the user id\n        user_name: '',\n        email: '',\n        role: '',\n        account_status: '',\n        telephone: '',\n        address: ''\n      },\n      oldPassword: '',\n      newPassword: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async updateUser() {\n      if (this.oldPassword === this.user.password) {\n        this.errorMessage = \"Old password is incorrect.\";\n        return;\n      }\n      if (this.oldPassword === this.newPassword) {\n        this.errorMessage = \"New password must be different from the old password.\";\n        return;\n      }\n      try {\n        const response = await fetch(`/api/users/${this.user.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\n          },\n          body: JSON.stringify({\n            ...this.user,\n            newPassword: this.newPassword\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('Success:', data);\n          // Handle success (e.g., navigate to another page or display a success message)\n        } else {\n          this.errorMessage = data.message || 'Failed to update user';\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        this.errorMessage = 'An error occurred while updating the user';\n      }\n    }\n  },\n  created() {\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\n    fetch(`/api/users/${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\n      }\n    }).then(response => response.json()).then(data => {\n      this.user = data;\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }\n};","map":{"version":3,"names":["data","user","id","user_name","email","role","account_status","telephone","address","oldPassword","newPassword","errorMessage","methods","updateUser","password","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","json","ok","console","log","message","error","created","userId","$route","params","then","catch"],"sources":["E:\\CESI\\A4\\Projet DEV\\Projet\\APP\\KittyDelivery_Delivery\\frontend\\src\\components\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h2>Edit User Information</h2>\r\n    <form @submit.prevent=\"updateUser\">\r\n      <div class=\"form-group\">\r\n        <label for=\"user_name\">Name:</label>\r\n        <input type=\"text\" v-model=\"user.user_name\" id=\"user_name\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" v-model=\"user.email\" id=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"role\">Role:</label>\r\n        <input type=\"text\" v-model=\"user.role\" id=\"role\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"account_status\">Account Status:</label>\r\n        <input type=\"text\" v-model=\"user.account_status\" id=\"account_status\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"telephone\">Telephone:</label>\r\n        <input type=\"text\" v-model=\"user.telephone\" id=\"telephone\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Address:</label>\r\n        <input type=\"text\" v-model=\"user.address\" id=\"address\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"old_password\">Old Password:</label>\r\n        <input type=\"password\" v-model=\"oldPassword\" id=\"old_password\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"new_password\">New Password:</label>\r\n        <input type=\"password\" v-model=\"newPassword\" id=\"new_password\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-button\">Update User</button>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', // Assuming you will fetch and set the user id\r\n        user_name: '',\r\n        email: '',\r\n        role: '',\r\n        account_status: '',\r\n        telephone: '',\r\n        address: ''\r\n      },\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async updateUser() {\r\n      if (this.oldPassword === this.user.password) {\r\n        this.errorMessage = \"Old password is incorrect.\";\r\n        return;\r\n      }\r\n      if (this.oldPassword === this.newPassword) {\r\n        this.errorMessage = \"New password must be different from the old password.\";\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(`/api/users/${this.user.id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\r\n          },\r\n          body: JSON.stringify({\r\n            ...this.user,\r\n            newPassword: this.newPassword\r\n          })\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          console.log('Success:', data);\r\n          // Handle success (e.g., navigate to another page or display a success message)\r\n        } else {\r\n          this.errorMessage = data.message || 'Failed to update user';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        this.errorMessage = 'An error occurred while updating the user';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const userId = this.$route.params.id; // Assuming you're using Vue Router and passing the user id in the route params\r\n    fetch(`/api/users/${userId}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}` // Include JWT token if necessary\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.user = data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching user data:', error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-container {\r\n  width: 300px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.submit-button {\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QAAE;QACRC,SAAS,EAAE,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,cAAc,EAAE,EAAE;QAClBC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACX,CAAC;MACDC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACJ,WAAU,KAAM,IAAI,CAACR,IAAI,CAACa,QAAQ,EAAE;QAC3C,IAAI,CAACH,YAAW,GAAI,4BAA4B;QAChD;MACF;MACA,IAAI,IAAI,CAACF,WAAU,KAAM,IAAI,CAACC,WAAW,EAAE;QACzC,IAAI,CAACC,YAAW,GAAI,uDAAuD;QAC3E;MACF;MACA,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAAC,cAAc,IAAI,CAACf,IAAI,CAACC,EAAE,EAAE,EAAE;UACzDe,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAE;UAC7D,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,GAAG,IAAI,CAACtB,IAAI;YACZS,WAAW,EAAE,IAAI,CAACA;UACpB,CAAC;QACH,CAAC,CAAC;QACF,MAAMV,IAAG,GAAI,MAAMe,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;UACfC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE3B,IAAI,CAAC;UAC7B;QACF,OAAO;UACL,IAAI,CAACW,YAAW,GAAIX,IAAI,CAAC4B,OAAM,IAAK,uBAAuB;QAC7D;MACF,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAAClB,YAAW,GAAI,2CAA2C;MACjE;IACF;EACF,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC/B,EAAE,EAAE;IACtCc,KAAK,CAAC,cAAce,MAAM,EAAE,EAAE;MAC5Bb,OAAO,EAAE;QACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAE;MAC7D;IACF,CAAC,EACEc,IAAI,CAACnB,QAAO,IAAKA,QAAQ,CAACS,IAAI,CAAC,CAAC,EAChCU,IAAI,CAAClC,IAAG,IAAK;MACZ,IAAI,CAACC,IAAG,GAAID,IAAI;IAClB,CAAC,EACAmC,KAAK,CAACN,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}